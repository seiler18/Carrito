{"version":3,"sources":["Componentes/FichaProducto.js","Componentes/Producto.js","Componentes/Carro.js","Componentes/Navegacion.js","App.js","serviceWorker.js","index.js"],"names":["FichaProducto","props","state","modal","stock","listaCarrito","toggle","bind","agregarCarrito","this","setState","prevState","push","titulo","valor","Container","Button","onClick","Modal","isOpen","ModalHeader","ModalBody","CardImg","src","imagen","descripcion","ModalFooter","className","color","React","Component","Producto","Col","sm","Card","body","outline","CardBody","CardTitle","CardSubtitle","CardText","Carro","popoverOpen","total","totalPrecio","totalSuma","map","i","parseInt","arregloCarrito","key","id","Badge","length","Popover","target","placement","PopoverHeader","PopoverBody","Table","Navegacion","Navbar","light","expand","NavbarBrand","href","Nav","navbar","NavItem","NavLink","App","listaProductos","arregloComponentes","Row","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.38db9e04.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  CardImg,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Modal,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport \"./FichaProducto.css\";\r\nimport {listaCarrito} from '../listaCarrito.json';\r\nclass FichaProducto extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      stock: props.props.stock,\r\n      listaCarrito\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.agregarCarrito= this.agregarCarrito.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n      \r\n    }));\r\n  }\r\n  \r\n\r\n  agregarCarrito(stock){\r\nlistaCarrito.push({\r\n  \"titulo\": this.props.props.titulo,\r\n  \"valor\" : this.props.props.valor\r\n});\r\nthis.setState(prevState=>({\r\n  modal:!prevState.modal,\r\n  stock: prevState.stock -1 ,\r\n}));\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Button onClick={this.toggle}> Ver Ficha</Button>\r\n        <Modal isOpen={this.state.modal}>\r\n          <ModalHeader>{this.props.props.titulo}</ModalHeader>\r\n          <ModalBody>\r\n            <CardImg src={this.props.props.imagen} />\r\n            <p>\r\n              Detalles del producto seleccionado :{\" \"}\r\n              <b>{this.props.props.descripcion}</b>\r\n            </p>\r\n            <br />\r\n            <p>\r\n              Valor del producto : <b>{this.props.props.valor} $ CLP</b>{\" \"}\r\n            </p>\r\n            <p>Existen <b>{this.state.stock}</b> unidades en el inventario actual</p>\r\n          </ModalBody>\r\n\r\n          <ModalFooter className=\"modalFooter\">\r\n            <Button color=\"danger\" onClick={this.agregarCarrito}>\r\n              Agregar a su compra\r\n            </Button>\r\n            <Button color=\"dark\" onClick={this.toggle}>\r\n              Volver atras\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default FichaProducto;\r\n","import React from 'react';\r\nimport {CardSubtitle,CardText,CardTitle,CardBody,CardImg,Col, Card} from 'reactstrap';\r\nimport './Producto.css';\r\n\r\nimport FichaProducto from './FichaProducto';\r\n\r\nclass Producto extends React.Component{\r\n    render(){\r\n    return(\r\n        \r\n<Col sm =\"4\" >\r\n        <Card className=\"Card\" body outline color=\"dark\" >\r\n\r\n<CardImg src={this.props.imagen}/>\r\n       <CardBody>\r\n           <CardTitle>{this.props.titulo}</CardTitle>\r\n           <CardSubtitle><b>{this.props.valor} $ CLP</b></CardSubtitle>\r\n           <CardText>{this.props.descripcion}</CardText>\r\n           \r\n           {/* <Button className=\"Button\">Comprar</Button> */}\r\n          <FichaProducto props={this.props}/>\r\n           </CardBody> \r\n        </Card>\r\n        </Col>\r\n       \r\n    );\r\n}\r\n}\r\n\r\nexport default Producto;","import React from \"react\";\r\nimport {\r\n  Table,\r\n  PopoverBody,\r\n  Popover,\r\n  Badge,\r\n  Button,\r\n  PopoverHeader,\r\n} from \"reactstrap\";\r\nimport { listaCarrito } from \"../listaCarrito\";\r\n\r\nclass Carro extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      popoverOpen: false,\r\n      listaCarrito,\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.total = this.totalPrecio.bind(this)\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((prevState) => ({\r\n      popoverOpen: !prevState.popoverOpen,\r\n    }));\r\n  }\r\n\r\n  totalPrecio(){\r\n    let totalSuma=0;\r\n    this.state.listaCarrito.map(\r\n      (listaCarrito,i)=>{\r\n        totalSuma += parseInt (listaCarrito.valor);\r\n        return(totalSuma)\r\n      }\r\n    );\r\n    return (totalSuma*1000)\r\n  }\r\n  render() {\r\n    const arregloCarrito = this.state.listaCarrito.map((listaCarrito, i) => {\r\n      return (\r\n        //para que no de error de key\r\n        <tr key={i}>\r\n          <td>{(i += 1)}</td>\r\n          <td>{listaCarrito.titulo}</td>\r\n          <td>{listaCarrito.valor}$ CLP</td>\r\n        </tr>\r\n      );\r\n    });\r\n   \r\n\r\n    return (\r\n      <div>\r\n        <Button id=\"Popover1\" color=\"dark\">\r\n          <span className=\"material-icons\">shopping_cart</span>\r\n          <Badge color=\"danger\">{arregloCarrito.length}</Badge>\r\n        </Button>\r\n\r\n        <Popover\r\n          target=\"Popover1\"\r\n          placement=\"bottom\"\r\n          isOpen={this.state.popoverOpen}\r\n          toggle={this.toggle}\r\n        >\r\n          <PopoverHeader>Listado de Compra</PopoverHeader>\r\n          <PopoverBody>\r\n            <Table className=\"table table-dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Cantidad</th>\r\n                  <th>Producto</th>\r\n                  <th>Precio</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{arregloCarrito}</tbody>\r\n              <tfoot>\r\n                <tr>\r\n                <td><b>Total</b></td>\r\n<td></td>\r\n  <td>{this.totalPrecio()} $ CLP</td>\r\n\r\n\r\n\r\n                </tr>\r\n                </tfoot>\r\n            </Table>\r\n          </PopoverBody>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Carro;\r\n","import React from 'react';\r\nimport {Navbar,Nav,NavItem,NavLink,NavbarBrand} from 'reactstrap';\r\nimport './FichaProducto.css'\r\nimport Carro from './Carro';\r\n\r\nclass Navegacion extends React.Component{\r\n    render(){\r\n        return(\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\"><h1>{this.props.titulo}</h1></NavbarBrand>\r\n            <Nav  className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                    <NavLink href=\"https://seiler18.github.io/Curriculo/\" target=\"_blank\"><b>Link al perfil de Jesus Seiler</b></NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <Carro/>\r\n                </NavItem>\r\n\r\n            </Nav>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Navegacion","import React from \"react\";\nimport Producto from \"./Componentes/Producto\";\nimport { Container, Row } from \"reactstrap\";\nimport Navegacion from \"./Componentes/Navegacion\";\nimport \"./App.css\";\nimport { listaProductos } from \"./listaProductos.json\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      listaProductos,\n    };\n  }\n\n  render() {\n    const arregloComponentes = this.state.listaProductos.map(\n      (listaProductos, i) => {\n        return (\n          <Producto\n            key={i}\n            titulo={listaProductos.titulo}\n            imagen={listaProductos.imagen}\n            descripcion={listaProductos.descripcion}\n            valor={listaProductos.valor}\n            stock={listaProductos.stock}\n          />\n        );\n      }\n    );\n\n    return (\n      <Container>\n        <b>\n          <h4>\n            <Navegacion titulo=\"Carrito de compras\" />\n          </h4>\n        </b>\n        <Row>{arregloComponentes}</Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}